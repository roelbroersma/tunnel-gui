* Tunnel GUI
This is a very user friendly web interface for a creating a VPN Tunnel. A one-to-one tunnel or even a one-to-many (complete network overlay).
The Tunnel GUI can be deployed to a physical device or to a virtal device.

** Physical device
Setup the Tunnel GUI on a physical device like a Raspberry Pi. Odroid and other devices which can run the DietPi image are also supported. Even devices with non-DietPi images are supported but may need some more configuring.
1. Download the [DietPi](https://dietpi.com/ image for your device) (eg. for Raspberry Pi)
2. Install the DietPi image to a MicroSD card.
3. Copy the modified dietpi.txt from ..here..todo...  to the /boot/dietpi.txt  (it will use it on first boot)
4. Startup your device with the DietPi image.
5. When you startup your device, it will automatically obtain an IP address from DHCP and install the tunnel-gui. If it didn't got an address from DHCP, the tunnel-gui couldn't be installed and you have to do it manually by typing the following at the prompt:
#+begin_src shell
  wget -q -O - https://github.com/roelbroersma/tunnel-gui/raw/main/install.txt | bash  at the shell
#+end_src


** Running on Hyper-V
1. Download the DietPi image for Hyper-V
2. Run the following at the prompt:
#+begin_src shell
  wget -q -O - https://github.com/roelbroersma/tunnel-gui/raw/main/install.txt | bash  at the shell
#+end_src


** Running from Docker (for development purposes)
You can download this repo to your own computer and run web-server locally in Docker container:
 1. You need to have installed Docker Desktop (https://www.docker.com/products/docker-desktop/)
 2. Run Docker Desktop
 3. Go to project's directory
 3. Create .env file (like in the paragraph above)
 4. Run `make -f Makefile run`
 5. You will be logged into container
 6. Run `make -f Makefile start`


** Explanation about the files
The following files need to be modified when checking out the project but they are automatically set for newly installed devices using the install script.
 1. A new file web_password.txt in project's directory with admin's password of RaspberryPI.
 2. An .env file with the following important values (See or renamce the example in .env.template file)
    1. SECRET_KEY - secret value for web-project
    2. DEBUG - True or False.
    3. SUPER_PASSWORD - password value for web admin's purposes (web-project allows login with this password or with RaspberryPI password)
    4. LOG_PATH - path to file which tail will be showed on IP Address page
    5. PORT - The port the application is running on, like 80 or 8080

All script files which interface with the backend (openvpn, pimd, mdns, bridge-tools, ip address changes, etc.) are located in the /scripts/ folder. These files are developped and tested for the DietPi image, however they may work on other Debian-based Linux installations and other Linux installations as well because we try to keep the backend very flexible.

Run the application with this command:
#+begin_src shell
  make -f Makefile start_flask
#+end_src
